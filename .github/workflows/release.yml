name: Release

on:
  push:
    branches: [ "develop" ]

  workflow_dispatch:

jobs:
  

  build:
    name: Create Android Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.KEY_BASE64 }}
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "11.x"
          cache: gradle
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.10.5"
          channel: 'stable'
          cache: true
      
      - name: Get dependencies
        run: flutter pub get
      
      - name: Start Android Release Build
        run: flutter build apk --release

      - name: Upload Android Release
        uses: actions/upload-artifact@v2
        with:
          name: android-release
          path: build/app/outputs/flutter-apk/app-release.apk

  deploy:
    name: Deploy Android Build
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Get Android Build from artifacts
      uses: actions/download-artifact@v2
      with:
        name: android-release
    - name: install firebase
      run: | 
        npm install firebase-tools -g
    - name: distribute app
      run: | 
        "firebase appdistribution:distribute app-release.apk \
        --app ${{ secrets.FIREBASE_ANDROID_ID }} \
        --release-notes "Hello GDG" \
        --groups "gdg-users" \
        --token ${{ secrets.FIREBASE_TOKEN }} "
